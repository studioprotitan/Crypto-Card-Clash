# Stripe (test)
STRIPE_SECRET_KEY=sk_test_xxx
STRIPE_WEBHOOK_SECRET=whsec_xxx # Replace with the secret from `stripe listen`

# URLs
NEXT_PUBLIC_SITE_URL=http://localhost:3000
PUBLIC_URL=http://localhost:3000
NEXT_PUBLIC_BASE_URL=http://localhost:3000

# Firebase Admin â€“ prefer a FILE PATH during dev:
GOOGLE_APPLICATION_CREDENTIALS=C:/Users/<YourUser>/Documents/keys/my-project-service-account.json

# Firebase Client (for browser) - Get these from your Firebase project settings
NEXT_PUBLIC_FIREBASE_API_KEY=
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=
NEXT_PUBLIC_FIREBASE_PROJECT_ID=
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=
NEXT_PUBLIC_FIREBASE_APP_ID=

# Session
SESSION_SECRET=<long-random-string-of-at-least-32-chars>

# Firebase Admin (for server-side ops like NFT upload)
# The lib/firebase-admin.ts helper prefers these individual vars if set.
# Otherwise, it falls back to GOOGLE_APPLICATION_CREDENTIALS.
FIREBASE_PROJECT_ID= # e.g., my-cool-project
FIREBASE_CLIENT_EMAIL= # e.g., firebase-adminsdk-xxxxx@my-cool-project.iam.gserviceaccount.com
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n"
FIREBASE_STORAGE_BUCKET= # e.g., my-cool-project.appspot.com

# Admin
ADMIN_UPLOAD_KEY=dev-only-secret # A simple secret to protect the NFT upload endpoint during dev
